import{_ as s,b as n,a,J as l}from"./chunks/framework.218694e7.js";const u=JSON.parse('{"title":"\u539F\u578B","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u539F\u578B","slug":"\u539F\u578B"},{"level":2,"title":"\u7279\u70B9","slug":"\u7279\u70B9"},{"level":2,"title":"\u6837\u5217\u4EE3\u7801","slug":"\u6837\u5217\u4EE3\u7801"},{"level":2,"title":"\u91CD\u8F7D==","slug":"\u91CD\u8F7D"}],"relativePath":"cppbook/stl/algorithm/find.md","lastUpdated":1659197332000}'),p={name:"cppbook/stl/algorithm/find.md"},o=l(`<h2 id="\u539F\u578B" tabindex="-1">\u539F\u578B <a class="header-anchor" href="#\u539F\u578B" aria-hidden="true">#</a></h2><div class="language-c line-numbers-mode"><button class="copy"></button><span class="lang">c</span><pre><code><span class="line"><span style="color:#A6ACCD;">template </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">class InputIterator</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> class T</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">   InputIterator </span><span style="color:#82AAFF;">find</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">InputIterator first</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> InputIterator last</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> T</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>\u4F5C\u7528:</strong> \u67E5\u627E\u8303\u56F4\u5185\u7684\u503C,\u8FD4\u56DE[first,last)\u5185\u7684\u7B2C\u4E00\u4E2A\u503C\u548Cval\u76F8\u7B49\u7684\u8FED\u4EE3\u5668.\u5982\u679C\u6CA1\u6709\u627E\u5230\u53CD\u56DElast\u8FED\u4EE3\u5668</p><p>find\u7684\u884C\u4E3A\u7B49\u540C\u4E8E\u4E0B\u9762\u7684\u4EE3\u7801</p><div class="language-c line-numbers-mode"><button class="copy"></button><span class="lang">c</span><pre><code><span class="line"><span style="color:#A6ACCD;">template</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">class InputIterator</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> class T</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  InputIterator </span><span style="color:#82AAFF;">find</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">InputIterator first</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> InputIterator last</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> T</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> val</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">first</span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;">last</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(*</span><span style="color:#F07178;">first</span><span style="color:#89DDFF;">==</span><span style="color:#F07178;">val</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> first</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">first</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> last</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="\u7279\u70B9" tabindex="-1">\u7279\u70B9 <a class="header-anchor" href="#\u7279\u70B9" aria-hidden="true">#</a></h2><ul><li>\u53EF\u4EE5\u8FD0\u884C\u5728\u524D\u9762\u5B66\u4E60\u7684\u6240\u6709\u5BB9\u5668\u4E0A\u9762</li><li>\u4F9D\u8D56<code>==</code>\u64CD\u4F5C\u7B26\u6765\u5224\u65AD\u5143\u7D20\u662F\u5426\u76F8\u7B49</li></ul><h2 id="\u6837\u5217\u4EE3\u7801" tabindex="-1">\u6837\u5217\u4EE3\u7801 <a class="header-anchor" href="#\u6837\u5217\u4EE3\u7801" aria-hidden="true">#</a></h2><div class="language-c line-numbers-mode"><button class="copy"></button><span class="lang">c</span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// find example</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">iostream</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">     </span><span style="color:#676E95;font-style:italic;">// std::cout</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">algorithm</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// std::find</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">vector</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">       </span><span style="color:#676E95;font-style:italic;">// std::vector</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// using std::find with array and pointer:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> myints</span><span style="color:#C792EA;">[]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">40</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> p</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  p </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">std::find</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">myints</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> myints</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">p </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> myints</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">    std::cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Element found in myints: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">p </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">else</span></span>
<span class="line"><span style="color:#F07178;">    std::cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Element not found in myints</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// using std::find with vector and iterator:</span></span>
<span class="line"><span style="color:#F07178;">  std::vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">myvector</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">myints</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">myints</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  std::vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;">::iterator it</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  it </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">find</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">myvector</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">begin</span><span style="color:#89DDFF;">(),</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">myvector</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">end</span><span style="color:#89DDFF;">(),</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">it </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">myvector</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">end</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#F07178;">    std::cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Element found in myvector: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">it </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">else</span></span>
<span class="line"><span style="color:#F07178;">    std::cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Element not found in myvector</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>\u8F93\u51FA:</p><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">Element found in myints: 30</span></span>
<span class="line"><span style="color:#A6ACCD;">Element found in myvector: 30</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="\u91CD\u8F7D" tabindex="-1">\u91CD\u8F7D== <a class="header-anchor" href="#\u91CD\u8F7D" aria-hidden="true">#</a></h2>`,12),e=[o];function t(r,c,F,y,D,i){return a(),n("div",null,e)}var A=s(p,[["render",t]]);export{u as __pageData,A as default};
