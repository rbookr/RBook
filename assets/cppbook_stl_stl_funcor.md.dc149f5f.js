import{_ as s,b as n,a,J as l}from"./chunks/framework.218694e7.js";const A=JSON.parse('{"title":"\u4EFF\u51FD\u6570 functional","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u57FA\u7840\u7C7B\u6A21\u677F","slug":"\u57FA\u7840\u7C7B\u6A21\u677F"},{"level":2,"title":"operator\u7C7B\u6A21\u677F","slug":"operator\u7C7B\u6A21\u677F"},{"level":3,"title":"\u8BA1\u7B97\u64CD\u4F5C","slug":"\u8BA1\u7B97\u64CD\u4F5C"},{"level":3,"title":"\u6BD4\u8F83\u64CD\u4F5C","slug":"\u6BD4\u8F83\u64CD\u4F5C"},{"level":3,"title":"\u903B\u8F91\u64CD\u4F5C","slug":"\u903B\u8F91\u64CD\u4F5C"},{"level":2,"title":"\u4FEE\u6539\u4E0E\u8F6C\u53D8\u51FD\u6570","slug":"\u4FEE\u6539\u4E0E\u8F6C\u53D8\u51FD\u6570"},{"level":3,"title":"\u5426\u8BA4\u5668","slug":"\u5426\u8BA4\u5668"},{"level":3,"title":"\u53C2\u6570\u7ED1\u5B9A\u5668","slug":"\u53C2\u6570\u7ED1\u5B9A\u5668"},{"level":3,"title":"\u8F6C\u6362\u5668","slug":"\u8F6C\u6362\u5668"},{"level":2,"title":"\u6709\u7528\u7684\u7C7B\u578B","slug":"\u6709\u7528\u7684\u7C7B\u578B"},{"level":2,"title":"STL \u4E2D\u9884\u5B9A\u4E49\u597D\u7684\u4EFF\u51FD\u6570","slug":"stl-\u4E2D\u9884\u5B9A\u4E49\u597D\u7684\u4EFF\u51FD\u6570"},{"level":3,"title":"\u7B97\u672F\u7C7B","slug":"\u7B97\u672F\u7C7B"},{"level":3,"title":"\u5173\u7CFB\u8FD0\u7B97\u7C7B","slug":"\u5173\u7CFB\u8FD0\u7B97\u7C7B"},{"level":3,"title":"\u903B\u8F91\u8FD0\u7B97\u7C7B","slug":"\u903B\u8F91\u8FD0\u7B97\u7C7B"}],"relativePath":"cppbook/stl/stl_funcor.md","lastUpdated":1659197332000}'),e={name:"cppbook/stl/stl_funcor.md"},t=l(`<h1 id="\u4EFF\u51FD\u6570-functional" tabindex="-1">\u4EFF\u51FD\u6570 functional <a class="header-anchor" href="#\u4EFF\u51FD\u6570-functional" aria-hidden="true">#</a></h1><div class="language-c line-numbers-mode"><button class="copy"></button><span class="lang">c</span><pre><code><span class="line"><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> myclass </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">operator</span><span style="color:#89DDFF;">()(</span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> a</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> a</span><span style="color:#89DDFF;">;}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> myobject</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">myobject</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;">           </span><span style="color:#676E95;font-style:italic;">// function-like syntax with object myobject </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4F5C\u4E3Astl\u4E2D\u7B97\u6CD5\u6A21\u677F\u51FD\u6570\u7684\u53C2\u6570.</p><h2 id="\u57FA\u7840\u7C7B\u6A21\u677F" tabindex="-1">\u57FA\u7840\u7C7B\u6A21\u677F <a class="header-anchor" href="#\u57FA\u7840\u7C7B\u6A21\u677F" aria-hidden="true">#</a></h2><table><thead><tr><th>\u7C7B\u578B</th><th>\u542B\u4E49</th></tr></thead><tbody><tr><td>unary_function</td><td></td></tr><tr><td>binary_function</td><td></td></tr></tbody></table><h2 id="operator\u7C7B\u6A21\u677F" tabindex="-1">operator\u7C7B\u6A21\u677F <a class="header-anchor" href="#operator\u7C7B\u6A21\u677F" aria-hidden="true">#</a></h2><h3 id="\u8BA1\u7B97\u64CD\u4F5C" tabindex="-1">\u8BA1\u7B97\u64CD\u4F5C <a class="header-anchor" href="#\u8BA1\u7B97\u64CD\u4F5C" aria-hidden="true">#</a></h3><table><thead><tr><th>\u7C7B\u578B</th><th>\u542B\u4E49</th></tr></thead><tbody><tr><td>plus</td><td>\u52A0</td></tr><tr><td>minus</td><td>\u51CF</td></tr><tr><td>multiplies</td><td>\u4E58</td></tr><tr><td>divides</td><td>\u9664</td></tr><tr><td>modulus</td><td>\u53D6\u6A21</td></tr><tr><td>negate</td><td>\u53D6\u53CD</td></tr></tbody></table><h3 id="\u6BD4\u8F83\u64CD\u4F5C" tabindex="-1">\u6BD4\u8F83\u64CD\u4F5C <a class="header-anchor" href="#\u6BD4\u8F83\u64CD\u4F5C" aria-hidden="true">#</a></h3><table><thead><tr><th>\u7C7B\u578B</th><th>\u542B\u4E49</th></tr></thead></table><h3 id="\u903B\u8F91\u64CD\u4F5C" tabindex="-1">\u903B\u8F91\u64CD\u4F5C <a class="header-anchor" href="#\u903B\u8F91\u64CD\u4F5C" aria-hidden="true">#</a></h3><table><thead><tr><th>\u7C7B\u578B</th><th>\u542B\u4E49</th></tr></thead></table><h2 id="\u4FEE\u6539\u4E0E\u8F6C\u53D8\u51FD\u6570" tabindex="-1">\u4FEE\u6539\u4E0E\u8F6C\u53D8\u51FD\u6570 <a class="header-anchor" href="#\u4FEE\u6539\u4E0E\u8F6C\u53D8\u51FD\u6570" aria-hidden="true">#</a></h2><h3 id="\u5426\u8BA4\u5668" tabindex="-1">\u5426\u8BA4\u5668 <a class="header-anchor" href="#\u5426\u8BA4\u5668" aria-hidden="true">#</a></h3><table><thead><tr><th>\u7C7B\u578B</th><th>\u542B\u4E49</th></tr></thead></table><h3 id="\u53C2\u6570\u7ED1\u5B9A\u5668" tabindex="-1">\u53C2\u6570\u7ED1\u5B9A\u5668 <a class="header-anchor" href="#\u53C2\u6570\u7ED1\u5B9A\u5668" aria-hidden="true">#</a></h3><h3 id="\u8F6C\u6362\u5668" tabindex="-1">\u8F6C\u6362\u5668 <a class="header-anchor" href="#\u8F6C\u6362\u5668" aria-hidden="true">#</a></h3><table><thead><tr><th>\u7C7B\u578B</th><th>\u542B\u4E49</th></tr></thead></table><h2 id="\u6709\u7528\u7684\u7C7B\u578B" tabindex="-1">\u6709\u7528\u7684\u7C7B\u578B <a class="header-anchor" href="#\u6709\u7528\u7684\u7C7B\u578B" aria-hidden="true">#</a></h2><table><thead><tr><th>\u7C7B\u578B</th><th>\u542B\u4E49</th></tr></thead></table><h2 id="stl-\u4E2D\u9884\u5B9A\u4E49\u597D\u7684\u4EFF\u51FD\u6570" tabindex="-1">STL \u4E2D\u9884\u5B9A\u4E49\u597D\u7684\u4EFF\u51FD\u6570 <a class="header-anchor" href="#stl-\u4E2D\u9884\u5B9A\u4E49\u597D\u7684\u4EFF\u51FD\u6570" aria-hidden="true">#</a></h2><p>greater \u7684\u5B9A\u4E49</p><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">#include &lt;iostream&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">#include &lt;string&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">#include &lt;bitset&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">#include &lt;vector&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">using namespace std;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">template &lt;class T&gt; struct mygreater {</span></span>
<span class="line"><span style="color:#A6ACCD;">  bool operator() (const T&amp; x, const T&amp; y) const {return x&gt;y;}</span></span>
<span class="line"><span style="color:#A6ACCD;">  typedef T first_argument_type;</span></span>
<span class="line"><span style="color:#A6ACCD;">  typedef T second_argument_type;</span></span>
<span class="line"><span style="color:#A6ACCD;">  typedef bool result_type;</span></span>
<span class="line"><span style="color:#A6ACCD;">};</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">int main(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    mygreater&lt;int&gt; gr;</span></span>
<span class="line"><span style="color:#A6ACCD;">    bool ys = gr(1,2);</span></span>
<span class="line"><span style="color:#A6ACCD;">    cout &lt;&lt; ys &lt;&lt; endl;</span></span>
<span class="line"><span style="color:#A6ACCD;">    return 0;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u5E38\u89C4\u4F7F\u7528<code>greater&lt;&gt;</code></p><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">#include &lt;iostream&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">#include &lt;string&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">#include &lt;bitset&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">#include &lt;vector&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">#include &lt;algorithm&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">using namespace std;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">int a[] = {1,2,3,3,2,1};</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">struct _s {</span></span>
<span class="line"><span style="color:#A6ACCD;">    int a;</span></span>
<span class="line"><span style="color:#A6ACCD;">}s[100];</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">void print(vector&lt;int&gt; xx){</span></span>
<span class="line"><span style="color:#A6ACCD;">    vector&lt;int&gt;::iterator iter;</span></span>
<span class="line"><span style="color:#A6ACCD;">    for(iter = xx.begin();iter != xx.end();iter++){</span></span>
<span class="line"><span style="color:#A6ACCD;">        cout &lt;&lt; *iter &lt;&lt; &quot; &quot;;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    cout &lt;&lt; endl;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">int main(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    vector&lt;int&gt; b1(a,a+sizeof(a)/sizeof(a[0]));</span></span>
<span class="line"><span style="color:#A6ACCD;">    print(b1);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    sort(b1.begin(),b1.end());</span></span>
<span class="line"><span style="color:#A6ACCD;">    print(b1);</span></span>
<span class="line"><span style="color:#A6ACCD;">    greater&lt;int&gt; t;</span></span>
<span class="line"><span style="color:#A6ACCD;">    sort(b1.begin(),b1.end(),t);</span></span>
<span class="line"><span style="color:#A6ACCD;">    //sort(b1.begin(),b1.end(),greater&lt;int&gt;());</span></span>
<span class="line"><span style="color:#A6ACCD;">    //sort(s,s+100); \u62A5\u9519</span></span>
<span class="line"><span style="color:#A6ACCD;">    //sort(s,s+100,t); \u62A5\u9519</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    print(b1);</span></span>
<span class="line"><span style="color:#A6ACCD;">    return 0;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h3 id="\u7B97\u672F\u7C7B" tabindex="-1">\u7B97\u672F\u7C7B <a class="header-anchor" href="#\u7B97\u672F\u7C7B" aria-hidden="true">#</a></h3><p>\u9664\u4E86\u5426\u5B9A\u4E3A\u4E00\u5143\uFF0C\u5176\u4ED6\u90FD\u4E3A\u4E8C\u5143\u4EFF\u51FD\u6570\u3002</p><table><thead><tr><th>\u540D\u5B57</th><th>\u5B9E\u73B0</th></tr></thead><tbody><tr><td>\u52A0\u6CD5</td><td><code>plus&lt;T&gt;</code></td></tr><tr><td>\u51CF\u6CD5</td><td><code>minus&lt;T&gt;</code></td></tr><tr><td>\u4E58\u6CD5</td><td><code>multiplies&lt;T&gt;</code></td></tr><tr><td>\u9664\u6CD5</td><td><code>divides&lt;T&gt;</code></td></tr><tr><td>\u6C42\u4F59</td><td><code>modulus&lt;T&gt;</code></td></tr><tr><td>\u5426\u5B9A</td><td><code>negate&lt;T&gt;</code></td></tr></tbody></table><h3 id="\u5173\u7CFB\u8FD0\u7B97\u7C7B" tabindex="-1">\u5173\u7CFB\u8FD0\u7B97\u7C7B <a class="header-anchor" href="#\u5173\u7CFB\u8FD0\u7B97\u7C7B" aria-hidden="true">#</a></h3><p>\u90FD\u662F\u4E8C\u5143\u4EFF\u51FD\u6570\u3002</p><table><thead><tr><th>\u540D\u5B57</th><th>\u5B9E\u73B0</th></tr></thead><tbody><tr><td>\u7B49\u4E8E</td><td><code>equal_to&lt;T&gt;</code></td></tr><tr><td>\u4E0D\u7B49\u4E8E</td><td><code>not_equal_to&lt;T&gt;</code></td></tr><tr><td>\u5927\u4E8E</td><td><code>greater&lt;T&gt;</code></td></tr><tr><td>\u5927\u4E8E\u7B49\u4E8E</td><td><code>greater_equal&lt;T&gt;</code></td></tr><tr><td>\u5C0F\u4E8E</td><td><code>less&lt;T&gt;</code></td></tr><tr><td>\u5C0F\u4E8E\u7B49\u4E8E</td><td><code>less_equal&lt;T&gt;</code></td></tr></tbody></table><h3 id="\u903B\u8F91\u8FD0\u7B97\u7C7B" tabindex="-1">\u903B\u8F91\u8FD0\u7B97\u7C7B <a class="header-anchor" href="#\u903B\u8F91\u8FD0\u7B97\u7C7B" aria-hidden="true">#</a></h3><p>\u4E0E\u548C\u6216\u4E3A\u4E8C\u5143\u4EFF\u51FD\u6570\uFF0C\u5426\u4E3A\u4E00\u5143\u4EFF\u51FD\u6570\u3002</p><table><thead><tr><th>\u540D\u5B57</th><th>\u5B9E\u73B0</th></tr></thead><tbody><tr><td>\u4E0E</td><td><code>logical_and&lt;T&gt;</code></td></tr><tr><td>\u6216</td><td><code>logical_or&lt;T&gt;</code></td></tr><tr><td>\u5426</td><td><code>logical_not&lt;T&gt;</code></td></tr></tbody></table>`,34),p=[t];function r(c,o,i,d,b,u){return a(),n("div",null,p)}var C=s(e,[["render",r]]);export{A as __pageData,C as default};
