import{_ as s,b as n,a,J as p}from"./chunks/framework.218694e7.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"cppbook/tricks/index.md","lastUpdated":1665884531000}'),l={name:"cppbook/tricks/index.md"},o=p(`<p>\u4ECB\u7ECD\u7684\u5404\u79CD\u8BED\u6CD5\u6280\u5DE7,\u9ED1\u9B54\u6CD5</p><p>\u795E\u5947\u4F18\u5316</p><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#pragma</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">GCC</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">target</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">avx2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#pragma</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">GCC</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">optimization</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">O3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#pragma</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">GCC</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">optimization</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">unroll-loops</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">bits/stdc++.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">long</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">long</span><span style="color:#A6ACCD;"> ll</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">io</span><span style="color:#A6ACCD;"> ios_base::sync_with_stdio(false);cin.tie(NULL);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,3),e=[o];function t(c,r,i,C,y,D){return a(),n("div",null,e)}var d=s(l,[["render",t]]);export{F as __pageData,d as default};
