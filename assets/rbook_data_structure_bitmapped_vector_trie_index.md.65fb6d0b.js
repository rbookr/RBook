import{_ as e,b as t,a as r,J as a}from"./chunks/framework.218694e7.js";const f=JSON.parse('{"title":"bitmapped vector trie","description":"","frontmatter":{"_id":"bc7e21425e","title":"bitmapped vector trie","date":"2022-10-01 00:11","update":"2022-10-01 00:11","author":"Rainboy"},"headers":[{"level":2,"title":"\u53C2\u8003","slug":"\u53C2\u8003"}],"relativePath":"rbook/data_structure/bitmapped_vector_trie/index.md","lastUpdated":1664718454000}'),i={name:"rbook/data_structure/bitmapped_vector_trie/index.md"},s=a('<h2 id="\u53C2\u8003" tabindex="-1">\u53C2\u8003 <a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a></h2><ul><li>\u4F5C\u8005\u672C\u4EBA Rich Hickey \u89C6\u9891\u8BB2\u89E3 <a href="https://www.infoq.com/presentations/Value-Identity-State-Rich-Hickey/" target="_blank" rel="noreferrer">Persistent Data Structures and Managed References</a></li><li><a href="https://hypirion.com/musings/understanding-persistent-vector-pt-1" target="_blank" rel="noreferrer">Understanding Clojure&#39;s Persistent Vectors, pt. 1</a></li><li><a href="https://hypirion.com/musings/understanding-persistent-vector-pt-2" target="_blank" rel="noreferrer">Understanding Clojure&#39;s Persistent Vectors, pt. 2</a></li><li><a href="http://lampwww.epfl.ch/papers/idealhashtrees.pdf" target="_blank" rel="noreferrer"> Phil Bagwell&#39;s Ideal Hash Trees,</a></li></ul>',2),n=[s];function o(d,l,c,p,_,h){return r(),t("div",null,n)}var m=e(i,[["render",o]]);export{f as __pageData,m as default};
